<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"   
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    	            http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                http://www.springframework.org/schema/context               http://www.springframework.org/schema/context/spring-context-3.2.xsd  
                http://www.springframework.org/schema/tx   
                http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop.xsd
                ">
    <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://192.168.0.29:3306/test">
		</property>
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
    <!-- 配置事务管理 -->
  	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
  	</bean>
<!-- 利用AOP,实现对Service的声明式事务管理 -->
    <!-- 通知 -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
	     <tx:attributes>
	       <tx:method name="*" rollback-for="java.lang.Exception"/>
	     </tx:attributes>
    </tx:advice>
  
  <aop:config>
  	<!-- 切入点 -->
    <aop:pointcut id="servicepointcut" expression="execution(* com.lq.dao.*.*(..))"/>
    <!--  把切入点和通知连接起来-->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="servicepointcut"/>
  </aop:config> 
   
  	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!-- mybatis配置文件路径-->  
    	<property name="configLocation"  value="classpath:config/SqlMapConfig.xml"/> 
        <property name="dataSource" ref="dataSource" />  
    </bean>
    
  	<!-- 配置sqlsession 产生这个实例就是通过 sqlsessionTemplate来实现的 -->      
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
	    <constructor-arg index="0">  
	    	<ref  bean="sqlSessionFactory"/>  
	    </constructor-arg>  
    </bean> 
  </beans>
  	